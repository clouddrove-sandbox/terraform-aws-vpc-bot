name: Test Auto Merge

# on:
#   pull_request:
#     types:
#       - labeled
#       - unlabeled
#       - synchronize
#       - opened
#       - edited
#       - ready_for_review
#       - reopened
#       - unlocked
#   check_run:
#     types:
#       - [ completed ]

on:
  pull_request:
    branches:
      - main
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_run:
    types:
      - completed
  status: {}
  # workflow_dispatch:
  #   inputs: 
  #     pullRequestNumber:
  #       description: Pull request number to auto-approve
  #       required: false

jobs:
  auto-approve:
    name: Auto Approve a PR by dependabot
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
     # Perform the auto approve action only when the PR is raised by dependabot 
    if: github.actor == 'cloudlovely'
    steps:
      - name: Auto approve
        uses: hmarr/auto-approve-action@v3.2.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # pull-request-number: ${{ github.event.inputs.pullRequestNumber }}

  auto-merge:  
    runs-on: ubuntu-latest
    needs: auto-approve
    steps:
      - id: automerge
        name: automerge
        uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_FILTER_AUTHOR: 'cloudlovely'
          MERGE_METHOD: "merge"
          MERGE_DELETE_BRANCH: "true"
          MERGE_LABELS: "automerge"
          MERGE_REQUIRED_APPROVALS: "0"
    # steps:
    #   - name: Check if all status checks are successful
    #     id: check-status
    #     run: |
    #       PR_STATUS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
    #       -H "Accept: application/vnd.github.v3+json" \
    #       https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/status)

    #       if echo "$PR_STATUS" | jq -e '.statuses[] | select(.state != "success" and .context != "automerge")' > /dev/null; then
    #         echo "At least one check failed or pending, aborting merge."
    #         exit 1
    #       fi
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

    #   - name: Automerge if checks pass
    #     if: steps.check-status.run.result == 'success'
    #     uses: "pascalgn/automerge-action@v0.15.6"
    #     env:
    #       GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" 


